from vkbottle.bot import Bot, Message
import os
from dotenv import load_dotenv, find_dotenv
from vkbottle import Keyboard, KeyboardButtonColor, Text
from vkontakt import vk_main
from vkbottle.exception_factory import VKAPIError

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
load_dotenv(find_dotenv())
token = (os.getenv('token_group'))
bot = Bot(token=token)


M_J_KEYBOARD = (
    Keyboard(one_time=False, inline=True)
    .add(Text("–º"), color=KeyboardButtonColor.POSITIVE)
    .add(Text("–∂"), color=KeyboardButtonColor.PRIMARY)
    .get_json()
)

SKIP_BUTTONS = (
    Keyboard(one_time=False, inline=True)
    .add(Text("–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö"), color=KeyboardButtonColor.POSITIVE)
    .add(Text("–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"), color=KeyboardButtonColor.POSITIVE)
    .add(Text("–î–∞–ª–µ–µ"), color=KeyboardButtonColor.PRIMARY)
    .get_json()
)

user_gender = {}

@bot.on.message(text='–ü—Ä–∏–≤–µ—Ç')
async def handle_message(message: Message):
    await message.answer('üòâ –û—Ç–ª–∏—á–Ω–æ! –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–¥–±–∏—Ä–∞—Ç—å –ø–∞—Ä—É')
    user_id = message.from_id
    try:
        result = await vk_main.get_inf(user_id)
    except VKAPIError:
        await message.answer('–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Ç üòï\n–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–ª–∏–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.')
        return
    if result.get('age') == None or result.get('sex') == None or result.get('city') == None:
        await message.answer('–£ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç –∏–ª–∏ –≥–æ—Ä–æ–¥. –ú—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –≤–∞–º –ø–∞—Ä—É üòï')
        return
    await message.answer("–ö–∞–∫–æ–≥–æ –ø–æ–ª–∞ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –ø–∞—Ä—É?", keyboard=M_J_KEYBOARD)

@bot.on.message(text='–º')
async def handle_male(message: Message):
    user_id = message.from_id
    user_gender[user_id] = "–º"
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –º—É–∂—Å–∫–æ–π –ø–æ–ª", keyboard=(
    Keyboard(one_time=False, inline=True)
    .add(Text("–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫!"), color=KeyboardButtonColor.PRIMARY)
    .get_json()
))

@bot.on.message(text='–∂')
async def handle_female(message: Message):
    user_id = message.from_id
    user_gender[user_id] = '–∂'
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∂–µ–Ω—Å–∫–∏–π –ø–æ–ª", keyboard=(
    Keyboard(one_time=False, inline=True)
    .add(Text("–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫!"), color=KeyboardButtonColor.PRIMARY)
    .get_json()
))

i = 0
m = 1

@bot.on.message(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
async def add_to_favorites_handler(message: Message):
    global i
    global m
    i -= 1
    user_id = message.from_id
    try:
        result = await vk_main.get_inf(user_id)
        user_gender_choice = user_gender.get(user_id)
        if user_gender_choice == None:
            await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–∞—Ä—É')
            return
        if user_gender_choice not in ['–º', '–∂']:
            await message.answer('–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º—É–∂—Å–∫–æ–π –∏–ª–∏ –∂–µ–Ω—Å–∫–∏–π –ø–æ–ª.')
            return
        sex = 2 if user_gender_choice == '–º' else 1
        find = await vk_main.search(result.get('age'), sex, result.get('city'), i)
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {find[0].get('first_name')} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.")
        with open('favorits.txt', 'a') as f:
            f.write(f"{find[0].get('id')} : {m} \n")
    except VKAPIError:
        await message.answer(f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ{message.reply_message.from_id}")

    m += 1
    i += 1

@bot.on.message(text='–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö')
async def show_favorites_handler(message: Message):
    with open('favorits.txt') as f:
        favorites = f.read().splitlines()
    if not favorites:
        await message.answer("–°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç")
        return
    else:
        profiles = [f"https://vk.com/id{user_id}" for user_id in favorites]
    await message.answer("–°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n" + "\n".join(profiles), keyboard=SKIP_BUTTONS)


@bot.on.message(text='–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫!')
async def start_searching(message: Message):
    global i
    await message.answer('–ò—â—É –ø–∞—Ä—É...')
    user_id = message.from_id
    try:
        result = await vk_main.get_inf(user_id)
    except VKAPIError:
        await message.answer('–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Ç üòï\n–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.')
        return
    if result.get('age') == None or result.get('city') == None:
        await message.answer('–£ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –≤–æ–∑—Ä–∞—Å—Ç –∏–ª–∏ –≥–æ—Ä–æ–¥. –ú—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –≤–∞–º –ø–∞—Ä—É üòï')
        return
    user_gender_choice = user_gender.get(user_id)
    if user_gender_choice == None:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–∞—Ä—É')
        return
    if user_gender_choice not in ['–º', '–∂']:
        await message.answer('–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º—É–∂—Å–∫–æ–π –∏–ª–∏ –∂–µ–Ω—Å–∫–∏–π –ø–æ–ª.')
        return
    sex = 2 if user_gender_choice == '–º' else 1
    find = await vk_main.search(result.get('age'), sex, result.get('city'), i)
    photos = find[0].get('photos')
    if message.reply_message:
        if photos:
            attachment = [f'photo{find[0].get("id")}_{photo_id}' for photo_id in photos]
        else:
            attachment = None
        await message.answer(
            f"{find[0].get('first_name')} {find[0].get('last_name')}.\n –í–æ–∑—Ä–∞—Å—Ç: {find[0].get('age')}.\nC—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: {find[0].get('link')}",
            reply_to=message.reply_message.from_id, attachment=attachment, keyboard=SKIP_BUTTONS)
    else:
        if photos:
            attachment = [f'photo{find[0].get("id")}_{photo_id}' for photo_id in photos]
        else:
            attachment = None
        await message.answer(
            f"{find[0].get('first_name')} {find[0].get('last_name')}.\n –í–æ–∑—Ä–∞—Å—Ç: {find[0].get('age')}.\nC—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: {find[0].get('link')}",
            attachment=attachment, keyboard=SKIP_BUTTONS)
        i += 1
@bot.on.message(text='–î–∞–ª–µ–µ')
async def skipping(message: Message):
    await start_searching(message)

bot.run_forever()
